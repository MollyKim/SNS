{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kosun\\\\Desktop\\\\react-sns\\\\ReactNodeBird\\\\front\\\\components\\\\PostForm.js\";\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      isAddingPost = _useSelector.isAddingPost,\n      postAdded = _useSelector.postAdded;\n\n  useEffect(function () {\n    setText('');\n  }, [postAdded == true]);\n  var onSubmitForm = useCallback(function (e) {\n    e.preventDefault();\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        text: text\n      }\n    });\n  }, []);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  return React.createElement(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uBB34\\uC2A8 \\uC0DD\\uAC01\\uC744 \\uD558\\uC138\\uC694?\",\n    value: text,\n    onChange: onChangeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC62C\\uB9AC\\uAE30\"), React.createElement(Button, {\n    type: \"primary\",\n    style: {\n      float: 'right'\n    },\n    htmlType: \"submit\",\n    isLoading: isAddingPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"\\uAE00\\uC62C\\uB9AC\\uAE30\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, imagePaths.map(function (v) {\n    return React.createElement(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: 'http://localhost:3065/' + v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"\\uC0AD\\uC81C\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/kosun/Desktop/react-sns/ReactNodeBird/front/components/PostForm.js"],"names":["React","useCallback","useState","useEffect","Form","Input","Button","useSelector","useDispatch","ADD_POST_REQUEST","PostForm","dispatch","text","setText","state","post","imagePaths","isAddingPost","postAdded","onSubmitForm","e","preventDefault","type","data","onChangeText","target","value","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useState ,useEffect } from 'react';\r\nimport {Form,Input,Button} from 'antd';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { ADD_POST_REQUEST } from '../reducers/post';\r\n    \r\n\r\n\r\nconst PostForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [text,setText] = useState();\r\n    const {imagePaths,isAddingPost,postAdded} = useSelector(state=>state.post);\r\n\r\n    useEffect(()=>{\r\n        setText('');\r\n    },[postAdded==true]);\r\n\r\n    const onSubmitForm = useCallback((e)=> {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type:ADD_POST_REQUEST,\r\n            data:{\r\n                text,\r\n            },\r\n        });\r\n    },[]);\r\n\r\n    const onChangeText = useCallback((e)=>{\r\n        setText(e.target.value);\r\n    },[]);\r\n\r\n    return (\r\n    <Form style={{margin:'10px 0 20px' }}encType=\"multipart/form-data\" onSubmit={onSubmitForm} >\r\n        <Input.TextArea maxLength={140} placeholder=\"무슨 생각을 하세요?\" value={text} onChange={onChangeText} />\r\n        <div>\r\n            <Input  type=\"file\" multiple hidden />\r\n            <Button>이미지 올리기</Button>\r\n            <Button type=\"primary\" style={{float:'right'}} htmlType=\"submit\" isLoading={isAddingPost}>글올리기</Button>\r\n        </div>\r\n        <div>\r\n            {imagePaths.map((v)=> {\r\n                return(\r\n                <div key={v} style={{display:'inline-block'}}>\r\n                    <img src={'http://localhost:3065/' + v } style={{width:'200px'}} alt={v} />\r\n                    <div>\r\n                        <Button>삭제</Button>\r\n                    </div>\r\n                </div>\r\n                )\t\r\n            })}\r\n        </div>\r\n    </Form>\r\n    );\r\n};\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}