{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nexport var initialState = {\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: '명희'\n    },\n    content: '첫번째 컨텐츠',\n    img: 'https://www.pngitem.com/pimgs/m/15-152712_cat-kitten-clip-art-cat-icon-transparent-background.png'\n  }],\n  //화면에 보일 포스트들\n  imagePaths: [],\n  //미리보기 이미지 경로\n  addPostErrorReason: false,\n  //포스트 업로드 실패 이유\n  isAddingPost: false,\n  //포스트 업로드 중\n  postAdded: false //포스트업로드성공\n\n};\nvar dummyPost = {\n  User: {\n    id: 1,\n    nickname: '고순'\n  },\n  content: '더미 포스트입니다.'\n};\nexport var LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport var LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport var LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\nexport var LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport var LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport var LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport var LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport var LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport var LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE'; //이미지 업로드 액선\n\nexport var UPLOAD_IMAGE_REQUEST = 'UPLOAD_IMAGE_REQUEST';\nexport var UPLOAD_IMAGE_SUCCESS = 'UPLOAD_IMAGE_SUCCESS';\nexport var UPLOAD_IMAGE_FAILURE = 'UPLOAD_IMAGE_FAILURE'; //동기\n\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport var LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport var LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\nexport var RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport var RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport var RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nexport var UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport var UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\nvar ADD_DUMMY = 'ADD_DUMMY';\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addPostErrorReason: '',\n          postAdded: false\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n          postAdded: true\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPostErrorReason: action.error\n        });\n      }\n\n    case ADD_COMMENT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: true,\n          addCommentErrorReason: '',\n          commentAdded: false\n        });\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n        var post = state.mainPosts[postIndex];\n        var Comments = [].concat(_toConsumableArray(post.Comments), [dummyComment]);\n\n        var mainPosts = _toConsumableArray(state.mainPosts);\n\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          Comments: Comments\n        });\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          mainPosts: mainPosts,\n          commentAdded: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          addCommentErrorReason: action.error\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:/Users/kosun/Desktop/react-sns/ReactNodeBird/front/reducers/post.js"],"names":["initialState","mainPosts","User","id","nickname","content","img","imagePaths","addPostErrorReason","isAddingPost","postAdded","dummyPost","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","UPLOAD_IMAGE_REQUEST","UPLOAD_IMAGE_SUCCESS","UPLOAD_IMAGE_FAILURE","REMOVE_IMAGE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","ADD_DUMMY","state","action","type","error","isAddingComment","addCommentErrorReason","commentAdded","postIndex","findIndex","v","data","postId","post","Comments","dummyComment"],"mappings":"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","sourcesContent":["export const initialState = {\r\n    mainPosts:[{\r\n\t\tUser:{\r\n\t\t\tid:1,\r\n\t\t\tnickname:'명희',\r\n\t\t},\r\n\t\tcontent:'첫번째 컨텐츠',\r\n\t\timg:'https://www.pngitem.com/pimgs/m/15-152712_cat-kitten-clip-art-cat-icon-transparent-background.png',\r\n    }],//화면에 보일 포스트들\r\n    imagePaths: [],//미리보기 이미지 경로\r\n    addPostErrorReason:false,//포스트 업로드 실패 이유\r\n    isAddingPost:false,//포스트 업로드 중\r\n    postAdded:false,//포스트업로드성공\r\n};\r\n\r\nconst dummyPost = {\r\n    User:{\r\n        id:1,\r\n        nickname:'고순'\r\n    },\r\n    content:'더미 포스트입니다.',\r\n}\r\n\r\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\r\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\r\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\r\n//이미지 업로드 액선\r\nexport const UPLOAD_IMAGE_REQUEST = 'UPLOAD_IMAGE_REQUEST';\r\nexport const UPLOAD_IMAGE_SUCCESS = 'UPLOAD_IMAGE_SUCCESS';\r\nexport const UPLOAD_IMAGE_FAILURE = 'UPLOAD_IMAGE_FAILURE';\r\n//동기\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\r\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\r\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\r\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\r\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\r\n\r\nconst ADD_DUMMY = 'ADD_DUMMY';\r\n\r\nexport default(state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST_REQUEST:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    isAddingPost: true,\r\n                    addPostErrorReason: '',\r\n                    postAdded: false\r\n                };\r\n            }\r\n        case ADD_POST_SUCCESS:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    isAddingPost: false,\r\n                    mainPosts: [dummyPost, ...state.mainPosts],\r\n                    postAdded: true\r\n                };\r\n            }\r\n        case ADD_POST_FAILURE:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    isAddingPost: false,\r\n                    addPostErrorReason: action.error\r\n                };\r\n            }\r\n        case ADD_COMMENT_REQUEST:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    isAddingComment: true,\r\n                    addCommentErrorReason: '',\r\n                    commentAdded: false\r\n                };\r\n            }\r\n        case ADD_COMMENT_SUCCESS:\r\n            {\r\n                const postIndex = state\r\n                    .mainPosts\r\n                    .findIndex(v => v.id === action.data.postId);\r\n                const post = state.mainPosts[postIndex];\r\n                const Comments = [\r\n                    ...post.Comments,\r\n                    dummyComment\r\n                ];\r\n                const mainPosts = [...state.mainPosts];\r\n                mainPosts[postIndex] = {\r\n                    ...post,\r\n                    Comments\r\n                };\r\n                return {\r\n                    ...state,\r\n                    isAddingComment: false,\r\n                    mainPosts,\r\n                    commentAdded: true\r\n                };\r\n            }\r\n        case ADD_COMMENT_FAILURE:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    isAddingComment: false,\r\n                    addCommentErrorReason: action.error\r\n                };\r\n            }\r\n        default:\r\n            {\r\n                return {\r\n                    ...state\r\n                };\r\n            }\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}